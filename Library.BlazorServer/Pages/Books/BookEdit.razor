@page "/book/edit/{id:int}"
@using Library.Application.Services
@using Library.SharedKernel.Dto
@using Library.Domain.Models
@inject IBookService _bookService
@inject NavigationManager _navigationManager

<PageTitle>Edit Book</PageTitle>
<h1>Edit Book</h1>
<EditForm Model="@_book" OnValidSubmit="@UpdateBook">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Title: </label>
        <InputText @bind-Value="@_book.Title" class="form-control" />
        <ValidationMessage For="@(() => _book.Title)" />
    </div>
    <div class="form-group">
        <label>Author: </label>
        <InputText @bind-Value="@_book.Author" class="form-control" />
        <ValidationMessage For="@(() => _book.Author)" />
    </div>
    <div class="form-group">
        <label>ISBN: </label>
        <InputText @bind-Value="@_book.ISBN" class="form-control" />
        <ValidationMessage For="@(() => _book.ISBN)" />
    </div>
    <div class="form-group">
        <label>Status: </label>
        <InputSelect @bind-Value="@_book.StatusOfBook" class="form-control">
            @foreach (var status in Enum.GetValues(typeof(StatusOfBook)).Cast<StatusOfBook>())
            {
                <option value="@status">@status</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => _book.StatusOfBook)" />
    </div>
    <br />
    <div class="form-group">
        <button class="btn btn-primary" type="submit">
            <span class="oi oi-pencil"></span> Update
        </button>
        <button @onclick="BackToList" class="btn btn-secondary" type="button">
            <span class="oi oi-media-skip-backward"></span> Back To List
        </button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    private UpdateBookDto _book = new UpdateBookDto();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var b = _bookService.GetById(Id);
        _book = new UpdateBookDto
            {
                BookId = b.BookId,
                Title = b.Title,
                Author = b.Author,
                ISBN = b.ISBN,
                StatusOfBook = b.StatusOfBook
            };
    }

    private void UpdateBook()
    {
        _bookService.Update(_book);
        _navigationManager.NavigateTo("/books");
    }

    private void BackToList()
    {
        _navigationManager.NavigateTo("/books");
    }
}
